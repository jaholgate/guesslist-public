DROP TABLE IF EXISTS post;

DROP TABLE IF EXISTS user;
DROP TABLE IF EXISTS club;
DROP TABLE IF EXISTS round;
DROP TABLE IF EXISTS song;

CREATE TABLE IF NOT EXISTS user (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  email TEXT UNIQUE NOT NULL,
  username TEXT UNIQUE NOT NULL,
  password TEXT NOT NULL,
  club_id INTEGER,
  score INTEGER,
  FOREIGN KEY (club_id) REFERENCES club (id)
);

CREATE TABLE IF NOT EXISTS club (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  name TEXT NOT NULL,
  created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  admin_id INTEGER NOT NULL,
  FOREIGN KEY (admin_id) REFERENCES user (id)
);

CREATE TABLE IF NOT EXISTS round (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  number INTEGER NOT NULL DEFAULT 1,
  name TEXT NOT NULL,
  description NOT NULL,
  status TEXT NOT NULL DEFAULT 'pending',
  created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  club_id INTEGER NOT NULL,
  FOREIGN KEY (club_id) REFERENCES club (id)
);

CREATE TABLE IF NOT EXISTS song (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  artist TEXT NOT NULL,
  name TEXT NOT NULL,
  image_url TEXT,
  spotify_track_id TEXT NOT NULL,
  spotify_external_url TEXT NOT NULL,
  created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  user_id NOT NULL,
  round_id INTEGER NOT NULL,
  club_id INTEGER NOT NULL,
  FOREIGN KEY (user_id) REFERENCES user (id),
  FOREIGN KEY (round_id) REFERENCES round (id),
  FOREIGN KEY (club_id) REFERENCES club (id)
);

CREATE TABLE IF NOT EXISTS guess (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  guess_user_id NOT NULL,
  user_id NOT NULL,
  round_id INTEGER NOT NULL,
  club_id INTEGER NOT NULL,
  FOREIGN KEY (user_id) REFERENCES user (id),
  FOREIGN KEY (round_id) REFERENCES round (id),
  FOREIGN KEY (club_id) REFERENCES club (id)
);